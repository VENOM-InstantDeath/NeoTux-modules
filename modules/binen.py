import re
upper = ["01000001", "01000010", "01000011", "01000100", "01000101", "01000110", "01000111", "01001000", "01001001", "01001010", "01001011", "01001100", "01001101", "01001110", "01001111", "01010000", "01010001", "01010010", "01010011", "01010100", "01010101", "01010110", "01010111", "01011000", "01011001", "01011010"]

lower = ["01100001", "01100010", "01100011", "01100100", "01100101", "01100110", "01100111", "01101000", "01101001", "01101010", "01101011", "01101100", "01101101", "01101110", "01101111", "01110000", "01110001", "01110010", "01110011", "01110100", "01110101", "01110110", "01110111", "01111000", "01111001", "01111010"]

num = ["00110000", "00110001", "00110010", "00110011", "00110100", "00110101", "00110110", "00110111", "00111000", "00111001"]

sym = ["00100001", "00100010", "00100011", "00100100", "00100101", "00100110", "00100111", "00101000", "00101001", "00101010", "00101011", "00101100", "00101101", "00101110", "00101111"]

def binen(x):
    s = ""
    for i in x:
        if i.isupper():
            s += upper[ord(i) - ord('A')] + " "
        elif i.islower():
            s += lower[ord(i) - ord('a')] + " "
        elif i.isdigit():
            s += num[int(i)] + " "
        elif re.match('[!"#$%&\'()*+,-./]', i):
            s += sym[ord(i) - 33] + " "
        elif i == ' ':
            s += "00100000 "
    return s.strip()

def bindec(x):
    s = ""
    x = x.split()
    for i in x:
        if i in upper:
            s += chr(ord('A') + upper.index(i))
        elif i in lower:
            s += chr(ord('a') + lower.index(i))
        elif i in num:
            s += str(num.index(i))
        elif i in sym:
            s += chr(33 + sym.index(i))
        elif i == "00100000":
            s += ' '
    return s.strip()

